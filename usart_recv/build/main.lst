ARM GAS  /tmp/cc5wW6mo.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_GPIO_Init,"ax",%progbits
  18              		.align	1
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	MX_GPIO_Init:
  26              	.LFB139:
  27              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2021 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include "stm32l4xx_hal_gpio.h"
  22:Core/Src/main.c **** #include "stm32l4xx_hal_uart.h"
  23:Core/Src/main.c **** #include <stdio.h>
  24:Core/Src/main.c **** #include <string.h>
  25:Core/Src/main.c **** 
  26:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  27:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  28:Core/Src/main.c **** 
  29:Core/Src/main.c **** /* USER CODE END Includes */
  30:Core/Src/main.c **** 
  31:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
ARM GAS  /tmp/cc5wW6mo.s 			page 2


  32:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  33:Core/Src/main.c **** 
  34:Core/Src/main.c **** /* USER CODE END PTD */
  35:Core/Src/main.c **** 
  36:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  37:Core/Src/main.c **** /* USER CODE BEGIN PD */
  38:Core/Src/main.c **** /* USER CODE END PD */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  41:Core/Src/main.c **** /* USER CODE BEGIN PM */
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* USER CODE END PM */
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  46:Core/Src/main.c **** UART_HandleTypeDef huart2;
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** /* USER CODE BEGIN PV */
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** uint8_t rx_indx;
  51:Core/Src/main.c **** char rx_data[2], rx_buffer[100], transfer_cplt;
  52:Core/Src/main.c **** 
  53:Core/Src/main.c **** /* USER CODE END PV */
  54:Core/Src/main.c **** 
  55:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  56:Core/Src/main.c **** void SystemClock_Config(void);
  57:Core/Src/main.c **** static void MX_GPIO_Init(void);
  58:Core/Src/main.c **** static void MX_USART2_UART_Init(void);
  59:Core/Src/main.c **** void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart);
  60:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  61:Core/Src/main.c **** 
  62:Core/Src/main.c **** /* USER CODE END PFP */
  63:Core/Src/main.c **** 
  64:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  65:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  66:Core/Src/main.c **** 
  67:Core/Src/main.c **** /* USER CODE END 0 */
  68:Core/Src/main.c **** 
  69:Core/Src/main.c **** /**
  70:Core/Src/main.c ****   * @brief  The application entry point.
  71:Core/Src/main.c ****   * @retval int
  72:Core/Src/main.c ****   */
  73:Core/Src/main.c **** int main(void)
  74:Core/Src/main.c **** {
  75:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  76:Core/Src/main.c **** 
  77:Core/Src/main.c ****   /* USER CODE END 1 */
  78:Core/Src/main.c **** 
  79:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  80:Core/Src/main.c **** 
  81:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  82:Core/Src/main.c ****   HAL_Init();
  83:Core/Src/main.c **** 
  84:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  85:Core/Src/main.c **** 
  86:Core/Src/main.c ****   /* USER CODE END Init */
  87:Core/Src/main.c **** 
  88:Core/Src/main.c ****   /* Configure the system clock */
ARM GAS  /tmp/cc5wW6mo.s 			page 3


  89:Core/Src/main.c ****   SystemClock_Config();
  90:Core/Src/main.c **** 
  91:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  92:Core/Src/main.c **** 
  93:Core/Src/main.c ****   /* USER CODE END SysInit */
  94:Core/Src/main.c **** 
  95:Core/Src/main.c ****   /* Initialize all configured peripherals */
  96:Core/Src/main.c ****   MX_GPIO_Init();
  97:Core/Src/main.c ****   MX_USART2_UART_Init();
  98:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
  99:Core/Src/main.c **** 
 100:Core/Src/main.c ****   HAL_UART_Receive_IT(&huart2, (uint8_t*)rx_data, 1);
 101:Core/Src/main.c **** 
 102:Core/Src/main.c ****   /* USER CODE END 2 */
 103:Core/Src/main.c **** 
 104:Core/Src/main.c ****   /* Infinite loop */
 105:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 106:Core/Src/main.c ****   while (1)
 107:Core/Src/main.c ****   {
 108:Core/Src/main.c ****     /* USER CODE END WHILE */
 109:Core/Src/main.c **** 
 110:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 111:Core/Src/main.c ****   }
 112:Core/Src/main.c ****   /* USER CODE END 3 */
 113:Core/Src/main.c **** }
 114:Core/Src/main.c **** 
 115:Core/Src/main.c **** /**
 116:Core/Src/main.c ****   * @brief System Clock Configuration
 117:Core/Src/main.c ****   * @retval None
 118:Core/Src/main.c ****   */
 119:Core/Src/main.c **** void SystemClock_Config(void)
 120:Core/Src/main.c **** {
 121:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 122:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 123:Core/Src/main.c **** 
 124:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 125:Core/Src/main.c ****   */
 126:Core/Src/main.c ****   if (HAL_PWREx_ControlVoltageScaling(PWR_REGULATOR_VOLTAGE_SCALE1) != HAL_OK)
 127:Core/Src/main.c ****   {
 128:Core/Src/main.c ****     Error_Handler();
 129:Core/Src/main.c ****   }
 130:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 131:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 132:Core/Src/main.c ****   */
 133:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 134:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 135:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 136:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 137:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 138:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 1;
 139:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 10;
 140:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV7;
 141:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
 142:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 143:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 144:Core/Src/main.c ****   {
 145:Core/Src/main.c ****     Error_Handler();
ARM GAS  /tmp/cc5wW6mo.s 			page 4


 146:Core/Src/main.c ****   }
 147:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 148:Core/Src/main.c ****   */
 149:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 150:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 151:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 152:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 153:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 154:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 155:Core/Src/main.c **** 
 156:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_4) != HAL_OK)
 157:Core/Src/main.c ****   {
 158:Core/Src/main.c ****     Error_Handler();
 159:Core/Src/main.c ****   }
 160:Core/Src/main.c **** }
 161:Core/Src/main.c **** 
 162:Core/Src/main.c **** /**
 163:Core/Src/main.c ****   * @brief USART2 Initialization Function
 164:Core/Src/main.c ****   * @param None
 165:Core/Src/main.c ****   * @retval None
 166:Core/Src/main.c ****   */
 167:Core/Src/main.c **** static void MX_USART2_UART_Init(void)
 168:Core/Src/main.c **** {
 169:Core/Src/main.c **** 
 170:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 0 */
 171:Core/Src/main.c **** 
 172:Core/Src/main.c ****   /* USER CODE END USART2_Init 0 */
 173:Core/Src/main.c **** 
 174:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 1 */
 175:Core/Src/main.c **** 
 176:Core/Src/main.c ****   /* USER CODE END USART2_Init 1 */
 177:Core/Src/main.c ****   huart2.Instance = USART2;
 178:Core/Src/main.c ****   huart2.Init.BaudRate = 9600;
 179:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 180:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 181:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 182:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 183:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 184:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 185:Core/Src/main.c ****   huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 186:Core/Src/main.c ****   huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 187:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 188:Core/Src/main.c ****   {
 189:Core/Src/main.c ****     Error_Handler();
 190:Core/Src/main.c ****   }
 191:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 2 */
 192:Core/Src/main.c **** 
 193:Core/Src/main.c ****   /* USER CODE END USART2_Init 2 */
 194:Core/Src/main.c **** 
 195:Core/Src/main.c **** }
 196:Core/Src/main.c **** 
 197:Core/Src/main.c **** void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart) {
 198:Core/Src/main.c ****   if (huart->Instance != USART2)
 199:Core/Src/main.c ****     return;
 200:Core/Src/main.c **** 
 201:Core/Src/main.c ****   uint8_t i;
 202:Core/Src/main.c **** 
ARM GAS  /tmp/cc5wW6mo.s 			page 5


 203:Core/Src/main.c ****   if (rx_indx == 0) {
 204:Core/Src/main.c ****     for (i = 0 ; i < 100 ; i++)
 205:Core/Src/main.c ****       rx_buffer[i] = 0;
 206:Core/Src/main.c ****     HAL_GPIO_WritePin(LD2_GPIO_Port, LD2_Pin, GPIO_PIN_RESET);
 207:Core/Src/main.c ****   }
 208:Core/Src/main.c **** 
 209:Core/Src/main.c ****   if (rx_data[0] != 13) {
 210:Core/Src/main.c ****     rx_buffer[rx_indx++] = rx_data[0];
 211:Core/Src/main.c ****   } else { // recieved 13 (carriage return)
 212:Core/Src/main.c ****     rx_indx = 0;
 213:Core/Src/main.c ****     transfer_cplt = 1; // transfer complete
 214:Core/Src/main.c ****     HAL_UART_Transmit(&huart2, (uint8_t*)"\n\r", 2, 100);
 215:Core/Src/main.c ****     HAL_UART_Transmit(&huart2, (uint8_t*)rx_buffer, strlen(rx_buffer), 100);
 216:Core/Src/main.c ****     HAL_UART_Transmit(&huart2, (uint8_t*)"\n\r", 2, 100);
 217:Core/Src/main.c ****     if (!strcmp(rx_buffer, "LD2 on"))
 218:Core/Src/main.c ****       HAL_GPIO_WritePin(LD2_GPIO_Port, LD2_Pin, GPIO_PIN_SET);
 219:Core/Src/main.c ****   }
 220:Core/Src/main.c **** 
 221:Core/Src/main.c ****   HAL_UART_Receive_IT(&huart2, (uint8_t*)rx_data, 1); // activate UART recv interrupt
 222:Core/Src/main.c ****   HAL_UART_Transmit(&huart2, (uint8_t*)rx_data, strlen(rx_data), 100);
 223:Core/Src/main.c **** }
 224:Core/Src/main.c **** 
 225:Core/Src/main.c **** /**
 226:Core/Src/main.c ****   * @brief GPIO Initialization Function
 227:Core/Src/main.c ****   * @param None
 228:Core/Src/main.c ****   * @retval None
 229:Core/Src/main.c ****   */
 230:Core/Src/main.c **** static void MX_GPIO_Init(void)
 231:Core/Src/main.c **** {
  28              		.loc 1 231 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 40
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 10B5     		push	{r4, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 4, -8
  36              		.cfi_offset 14, -4
  37 0002 8AB0     		sub	sp, sp, #40
  38              	.LCFI1:
  39              		.cfi_def_cfa_offset 48
 232:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  40              		.loc 1 232 3 view .LVU1
  41              		.loc 1 232 20 is_stmt 0 view .LVU2
  42 0004 0024     		movs	r4, #0
  43 0006 0594     		str	r4, [sp, #20]
  44 0008 0694     		str	r4, [sp, #24]
  45 000a 0794     		str	r4, [sp, #28]
  46 000c 0894     		str	r4, [sp, #32]
  47 000e 0994     		str	r4, [sp, #36]
 233:Core/Src/main.c **** 
 234:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 235:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  48              		.loc 1 235 3 is_stmt 1 view .LVU3
  49              	.LBB4:
  50              		.loc 1 235 3 view .LVU4
  51              		.loc 1 235 3 view .LVU5
ARM GAS  /tmp/cc5wW6mo.s 			page 6


  52 0010 214B     		ldr	r3, .L3
  53 0012 DA6C     		ldr	r2, [r3, #76]
  54 0014 42F00402 		orr	r2, r2, #4
  55 0018 DA64     		str	r2, [r3, #76]
  56              		.loc 1 235 3 view .LVU6
  57 001a DA6C     		ldr	r2, [r3, #76]
  58 001c 02F00402 		and	r2, r2, #4
  59 0020 0192     		str	r2, [sp, #4]
  60              		.loc 1 235 3 view .LVU7
  61 0022 019A     		ldr	r2, [sp, #4]
  62              	.LBE4:
  63              		.loc 1 235 3 view .LVU8
 236:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
  64              		.loc 1 236 3 view .LVU9
  65              	.LBB5:
  66              		.loc 1 236 3 view .LVU10
  67              		.loc 1 236 3 view .LVU11
  68 0024 DA6C     		ldr	r2, [r3, #76]
  69 0026 42F08002 		orr	r2, r2, #128
  70 002a DA64     		str	r2, [r3, #76]
  71              		.loc 1 236 3 view .LVU12
  72 002c DA6C     		ldr	r2, [r3, #76]
  73 002e 02F08002 		and	r2, r2, #128
  74 0032 0292     		str	r2, [sp, #8]
  75              		.loc 1 236 3 view .LVU13
  76 0034 029A     		ldr	r2, [sp, #8]
  77              	.LBE5:
  78              		.loc 1 236 3 view .LVU14
 237:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  79              		.loc 1 237 3 view .LVU15
  80              	.LBB6:
  81              		.loc 1 237 3 view .LVU16
  82              		.loc 1 237 3 view .LVU17
  83 0036 DA6C     		ldr	r2, [r3, #76]
  84 0038 42F00102 		orr	r2, r2, #1
  85 003c DA64     		str	r2, [r3, #76]
  86              		.loc 1 237 3 view .LVU18
  87 003e DA6C     		ldr	r2, [r3, #76]
  88 0040 02F00102 		and	r2, r2, #1
  89 0044 0392     		str	r2, [sp, #12]
  90              		.loc 1 237 3 view .LVU19
  91 0046 039A     		ldr	r2, [sp, #12]
  92              	.LBE6:
  93              		.loc 1 237 3 view .LVU20
 238:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  94              		.loc 1 238 3 view .LVU21
  95              	.LBB7:
  96              		.loc 1 238 3 view .LVU22
  97              		.loc 1 238 3 view .LVU23
  98 0048 DA6C     		ldr	r2, [r3, #76]
  99 004a 42F00202 		orr	r2, r2, #2
 100 004e DA64     		str	r2, [r3, #76]
 101              		.loc 1 238 3 view .LVU24
 102 0050 DB6C     		ldr	r3, [r3, #76]
 103 0052 03F00203 		and	r3, r3, #2
 104 0056 0493     		str	r3, [sp, #16]
 105              		.loc 1 238 3 view .LVU25
ARM GAS  /tmp/cc5wW6mo.s 			page 7


 106 0058 049B     		ldr	r3, [sp, #16]
 107              	.LBE7:
 108              		.loc 1 238 3 view .LVU26
 239:Core/Src/main.c **** 
 240:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 241:Core/Src/main.c ****   HAL_GPIO_WritePin(LD2_GPIO_Port, LD2_Pin, GPIO_PIN_RESET);
 109              		.loc 1 241 3 view .LVU27
 110 005a 2246     		mov	r2, r4
 111 005c 2021     		movs	r1, #32
 112 005e 4FF09040 		mov	r0, #1207959552
 113 0062 FFF7FEFF 		bl	HAL_GPIO_WritePin
 114              	.LVL0:
 242:Core/Src/main.c **** 
 243:Core/Src/main.c ****   /*Configure GPIO pin : B1_Pin */
 244:Core/Src/main.c ****   GPIO_InitStruct.Pin = B1_Pin;
 115              		.loc 1 244 3 view .LVU28
 116              		.loc 1 244 23 is_stmt 0 view .LVU29
 117 0066 4FF40053 		mov	r3, #8192
 118 006a 0593     		str	r3, [sp, #20]
 245:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 119              		.loc 1 245 3 is_stmt 1 view .LVU30
 120              		.loc 1 245 24 is_stmt 0 view .LVU31
 121 006c 4FF40413 		mov	r3, #2162688
 122 0070 0693     		str	r3, [sp, #24]
 246:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 123              		.loc 1 246 3 is_stmt 1 view .LVU32
 124              		.loc 1 246 24 is_stmt 0 view .LVU33
 125 0072 0794     		str	r4, [sp, #28]
 247:Core/Src/main.c ****   HAL_GPIO_Init(B1_GPIO_Port, &GPIO_InitStruct);
 126              		.loc 1 247 3 is_stmt 1 view .LVU34
 127 0074 05A9     		add	r1, sp, #20
 128 0076 0948     		ldr	r0, .L3+4
 129 0078 FFF7FEFF 		bl	HAL_GPIO_Init
 130              	.LVL1:
 248:Core/Src/main.c **** 
 249:Core/Src/main.c ****   /*Configure GPIO pin : LD2_Pin */
 250:Core/Src/main.c ****   GPIO_InitStruct.Pin = LD2_Pin;
 131              		.loc 1 250 3 view .LVU35
 132              		.loc 1 250 23 is_stmt 0 view .LVU36
 133 007c 2023     		movs	r3, #32
 134 007e 0593     		str	r3, [sp, #20]
 251:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 135              		.loc 1 251 3 is_stmt 1 view .LVU37
 136              		.loc 1 251 24 is_stmt 0 view .LVU38
 137 0080 0123     		movs	r3, #1
 138 0082 0693     		str	r3, [sp, #24]
 252:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 139              		.loc 1 252 3 is_stmt 1 view .LVU39
 140              		.loc 1 252 24 is_stmt 0 view .LVU40
 141 0084 0794     		str	r4, [sp, #28]
 253:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 142              		.loc 1 253 3 is_stmt 1 view .LVU41
 143              		.loc 1 253 25 is_stmt 0 view .LVU42
 144 0086 0894     		str	r4, [sp, #32]
 254:Core/Src/main.c ****   HAL_GPIO_Init(LD2_GPIO_Port, &GPIO_InitStruct);
 145              		.loc 1 254 3 is_stmt 1 view .LVU43
 146 0088 05A9     		add	r1, sp, #20
ARM GAS  /tmp/cc5wW6mo.s 			page 8


 147 008a 4FF09040 		mov	r0, #1207959552
 148 008e FFF7FEFF 		bl	HAL_GPIO_Init
 149              	.LVL2:
 255:Core/Src/main.c **** 
 256:Core/Src/main.c **** }
 150              		.loc 1 256 1 is_stmt 0 view .LVU44
 151 0092 0AB0     		add	sp, sp, #40
 152              	.LCFI2:
 153              		.cfi_def_cfa_offset 8
 154              		@ sp needed
 155 0094 10BD     		pop	{r4, pc}
 156              	.L4:
 157 0096 00BF     		.align	2
 158              	.L3:
 159 0098 00100240 		.word	1073876992
 160 009c 00080048 		.word	1207961600
 161              		.cfi_endproc
 162              	.LFE139:
 164              		.section	.rodata.HAL_UART_RxCpltCallback.str1.4,"aMS",%progbits,1
 165              		.align	2
 166              	.LC0:
 167 0000 0A0D00   		.ascii	"\012\015\000"
 168 0003 00       		.align	2
 169              	.LC1:
 170 0004 4C443220 		.ascii	"LD2 on\000"
 170      6F6E00
 171              		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
 172              		.align	1
 173              		.global	HAL_UART_RxCpltCallback
 174              		.syntax unified
 175              		.thumb
 176              		.thumb_func
 177              		.fpu fpv4-sp-d16
 179              	HAL_UART_RxCpltCallback:
 180              	.LVL3:
 181              	.LFB138:
 197:Core/Src/main.c ****   if (huart->Instance != USART2)
 182              		.loc 1 197 57 is_stmt 1 view -0
 183              		.cfi_startproc
 184              		@ args = 0, pretend = 0, frame = 0
 185              		@ frame_needed = 0, uses_anonymous_args = 0
 198:Core/Src/main.c ****     return;
 186              		.loc 1 198 3 view .LVU46
 198:Core/Src/main.c ****     return;
 187              		.loc 1 198 12 is_stmt 0 view .LVU47
 188 0000 0268     		ldr	r2, [r0]
 198:Core/Src/main.c ****     return;
 189              		.loc 1 198 6 view .LVU48
 190 0002 2E4B     		ldr	r3, .L17
 191 0004 9A42     		cmp	r2, r3
 192 0006 00D0     		beq	.L16
 193 0008 7047     		bx	lr
 194              	.L16:
 197:Core/Src/main.c ****   if (huart->Instance != USART2)
 195              		.loc 1 197 57 view .LVU49
 196 000a 70B5     		push	{r4, r5, r6, lr}
 197              	.LCFI3:
ARM GAS  /tmp/cc5wW6mo.s 			page 9


 198              		.cfi_def_cfa_offset 16
 199              		.cfi_offset 4, -16
 200              		.cfi_offset 5, -12
 201              		.cfi_offset 6, -8
 202              		.cfi_offset 14, -4
 201:Core/Src/main.c **** 
 203              		.loc 1 201 3 is_stmt 1 view .LVU50
 203:Core/Src/main.c ****     for (i = 0 ; i < 100 ; i++)
 204              		.loc 1 203 3 view .LVU51
 203:Core/Src/main.c ****     for (i = 0 ; i < 100 ; i++)
 205              		.loc 1 203 15 is_stmt 0 view .LVU52
 206 000c 2C4B     		ldr	r3, .L17+4
 207 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 203:Core/Src/main.c ****     for (i = 0 ; i < 100 ; i++)
 208              		.loc 1 203 6 view .LVU53
 209 0010 FBB1     		cbz	r3, .L7
 210              	.LVL4:
 211              	.L8:
 209:Core/Src/main.c ****     rx_buffer[rx_indx++] = rx_data[0];
 212              		.loc 1 209 3 is_stmt 1 view .LVU54
 209:Core/Src/main.c ****     rx_buffer[rx_indx++] = rx_data[0];
 213              		.loc 1 209 14 is_stmt 0 view .LVU55
 214 0012 2C4B     		ldr	r3, .L17+8
 215 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 209:Core/Src/main.c ****     rx_buffer[rx_indx++] = rx_data[0];
 216              		.loc 1 209 6 view .LVU56
 217 0016 0D2B     		cmp	r3, #13
 218 0018 24D0     		beq	.L10
 210:Core/Src/main.c ****   } else { // recieved 13 (carriage return)
 219              		.loc 1 210 5 is_stmt 1 view .LVU57
 210:Core/Src/main.c ****   } else { // recieved 13 (carriage return)
 220              		.loc 1 210 22 is_stmt 0 view .LVU58
 221 001a 2949     		ldr	r1, .L17+4
 222 001c 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
 223 001e 501C     		adds	r0, r2, #1
 224 0020 0870     		strb	r0, [r1]
 210:Core/Src/main.c ****   } else { // recieved 13 (carriage return)
 225              		.loc 1 210 26 view .LVU59
 226 0022 2949     		ldr	r1, .L17+12
 227 0024 8B54     		strb	r3, [r1, r2]
 228              	.L11:
 221:Core/Src/main.c ****   HAL_UART_Transmit(&huart2, (uint8_t*)rx_data, strlen(rx_data), 100);
 229              		.loc 1 221 3 is_stmt 1 view .LVU60
 230 0026 274C     		ldr	r4, .L17+8
 231 0028 284D     		ldr	r5, .L17+16
 232 002a 0122     		movs	r2, #1
 233 002c 2146     		mov	r1, r4
 234 002e 2846     		mov	r0, r5
 235 0030 FFF7FEFF 		bl	HAL_UART_Receive_IT
 236              	.LVL5:
 222:Core/Src/main.c **** }
 237              		.loc 1 222 3 view .LVU61
 222:Core/Src/main.c **** }
 238              		.loc 1 222 49 is_stmt 0 view .LVU62
 239 0034 2046     		mov	r0, r4
 240 0036 FFF7FEFF 		bl	strlen
 241              	.LVL6:
ARM GAS  /tmp/cc5wW6mo.s 			page 10


 222:Core/Src/main.c **** }
 242              		.loc 1 222 3 view .LVU63
 243 003a 6423     		movs	r3, #100
 244 003c 82B2     		uxth	r2, r0
 245 003e 2146     		mov	r1, r4
 246 0040 2846     		mov	r0, r5
 247 0042 FFF7FEFF 		bl	HAL_UART_Transmit
 248              	.LVL7:
 223:Core/Src/main.c **** 
 249              		.loc 1 223 1 view .LVU64
 250 0046 70BD     		pop	{r4, r5, r6, pc}
 251              	.LVL8:
 252              	.L9:
 205:Core/Src/main.c ****     HAL_GPIO_WritePin(LD2_GPIO_Port, LD2_Pin, GPIO_PIN_RESET);
 253              		.loc 1 205 7 is_stmt 1 discriminator 3 view .LVU65
 205:Core/Src/main.c ****     HAL_GPIO_WritePin(LD2_GPIO_Port, LD2_Pin, GPIO_PIN_RESET);
 254              		.loc 1 205 20 is_stmt 0 discriminator 3 view .LVU66
 255 0048 1F4A     		ldr	r2, .L17+12
 256 004a 0021     		movs	r1, #0
 257 004c D154     		strb	r1, [r2, r3]
 204:Core/Src/main.c ****       rx_buffer[i] = 0;
 258              		.loc 1 204 29 is_stmt 1 discriminator 3 view .LVU67
 259 004e 0133     		adds	r3, r3, #1
 260              	.LVL9:
 204:Core/Src/main.c ****       rx_buffer[i] = 0;
 261              		.loc 1 204 29 is_stmt 0 discriminator 3 view .LVU68
 262 0050 DBB2     		uxtb	r3, r3
 263              	.LVL10:
 264              	.L7:
 204:Core/Src/main.c ****       rx_buffer[i] = 0;
 265              		.loc 1 204 20 is_stmt 1 discriminator 1 view .LVU69
 266 0052 632B     		cmp	r3, #99
 267 0054 F8D9     		bls	.L9
 206:Core/Src/main.c ****   }
 268              		.loc 1 206 5 view .LVU70
 269 0056 0022     		movs	r2, #0
 270 0058 2021     		movs	r1, #32
 271 005a 4FF09040 		mov	r0, #1207959552
 272              	.LVL11:
 206:Core/Src/main.c ****   }
 273              		.loc 1 206 5 is_stmt 0 view .LVU71
 274 005e FFF7FEFF 		bl	HAL_GPIO_WritePin
 275              	.LVL12:
 206:Core/Src/main.c ****   }
 276              		.loc 1 206 5 view .LVU72
 277 0062 D6E7     		b	.L8
 278              	.L10:
 212:Core/Src/main.c ****     transfer_cplt = 1; // transfer complete
 279              		.loc 1 212 5 is_stmt 1 view .LVU73
 212:Core/Src/main.c ****     transfer_cplt = 1; // transfer complete
 280              		.loc 1 212 13 is_stmt 0 view .LVU74
 281 0064 164B     		ldr	r3, .L17+4
 282 0066 0022     		movs	r2, #0
 283 0068 1A70     		strb	r2, [r3]
 213:Core/Src/main.c ****     HAL_UART_Transmit(&huart2, (uint8_t*)"\n\r", 2, 100);
 284              		.loc 1 213 5 is_stmt 1 view .LVU75
 213:Core/Src/main.c ****     HAL_UART_Transmit(&huart2, (uint8_t*)"\n\r", 2, 100);
ARM GAS  /tmp/cc5wW6mo.s 			page 11


 285              		.loc 1 213 19 is_stmt 0 view .LVU76
 286 006a 194B     		ldr	r3, .L17+20
 287 006c 0122     		movs	r2, #1
 288 006e 1A70     		strb	r2, [r3]
 214:Core/Src/main.c ****     HAL_UART_Transmit(&huart2, (uint8_t*)rx_buffer, strlen(rx_buffer), 100);
 289              		.loc 1 214 5 is_stmt 1 view .LVU77
 290 0070 184E     		ldr	r6, .L17+24
 291 0072 164D     		ldr	r5, .L17+16
 292 0074 6423     		movs	r3, #100
 293 0076 0222     		movs	r2, #2
 294 0078 3146     		mov	r1, r6
 295 007a 2846     		mov	r0, r5
 296 007c FFF7FEFF 		bl	HAL_UART_Transmit
 297              	.LVL13:
 215:Core/Src/main.c ****     HAL_UART_Transmit(&huart2, (uint8_t*)"\n\r", 2, 100);
 298              		.loc 1 215 5 view .LVU78
 215:Core/Src/main.c ****     HAL_UART_Transmit(&huart2, (uint8_t*)"\n\r", 2, 100);
 299              		.loc 1 215 53 is_stmt 0 view .LVU79
 300 0080 114C     		ldr	r4, .L17+12
 301 0082 2046     		mov	r0, r4
 302 0084 FFF7FEFF 		bl	strlen
 303              	.LVL14:
 215:Core/Src/main.c ****     HAL_UART_Transmit(&huart2, (uint8_t*)"\n\r", 2, 100);
 304              		.loc 1 215 5 view .LVU80
 305 0088 6423     		movs	r3, #100
 306 008a 82B2     		uxth	r2, r0
 307 008c 2146     		mov	r1, r4
 308 008e 2846     		mov	r0, r5
 309 0090 FFF7FEFF 		bl	HAL_UART_Transmit
 310              	.LVL15:
 216:Core/Src/main.c ****     if (!strcmp(rx_buffer, "LD2 on"))
 311              		.loc 1 216 5 is_stmt 1 view .LVU81
 312 0094 6423     		movs	r3, #100
 313 0096 0222     		movs	r2, #2
 314 0098 3146     		mov	r1, r6
 315 009a 2846     		mov	r0, r5
 316 009c FFF7FEFF 		bl	HAL_UART_Transmit
 317              	.LVL16:
 217:Core/Src/main.c ****       HAL_GPIO_WritePin(LD2_GPIO_Port, LD2_Pin, GPIO_PIN_SET);
 318              		.loc 1 217 5 view .LVU82
 217:Core/Src/main.c ****       HAL_GPIO_WritePin(LD2_GPIO_Port, LD2_Pin, GPIO_PIN_SET);
 319              		.loc 1 217 10 is_stmt 0 view .LVU83
 320 00a0 0D49     		ldr	r1, .L17+28
 321 00a2 2046     		mov	r0, r4
 322 00a4 FFF7FEFF 		bl	strcmp
 323              	.LVL17:
 217:Core/Src/main.c ****       HAL_GPIO_WritePin(LD2_GPIO_Port, LD2_Pin, GPIO_PIN_SET);
 324              		.loc 1 217 8 view .LVU84
 325 00a8 0028     		cmp	r0, #0
 326 00aa BCD1     		bne	.L11
 218:Core/Src/main.c ****   }
 327              		.loc 1 218 7 is_stmt 1 view .LVU85
 328 00ac 0122     		movs	r2, #1
 329 00ae 2021     		movs	r1, #32
 330 00b0 4FF09040 		mov	r0, #1207959552
 331 00b4 FFF7FEFF 		bl	HAL_GPIO_WritePin
 332              	.LVL18:
ARM GAS  /tmp/cc5wW6mo.s 			page 12


 333 00b8 B5E7     		b	.L11
 334              	.L18:
 335 00ba 00BF     		.align	2
 336              	.L17:
 337 00bc 00440040 		.word	1073759232
 338 00c0 00000000 		.word	.LANCHOR0
 339 00c4 00000000 		.word	.LANCHOR2
 340 00c8 00000000 		.word	.LANCHOR1
 341 00cc 00000000 		.word	.LANCHOR4
 342 00d0 00000000 		.word	.LANCHOR3
 343 00d4 00000000 		.word	.LC0
 344 00d8 04000000 		.word	.LC1
 345              		.cfi_endproc
 346              	.LFE138:
 348              		.section	.text.Error_Handler,"ax",%progbits
 349              		.align	1
 350              		.global	Error_Handler
 351              		.syntax unified
 352              		.thumb
 353              		.thumb_func
 354              		.fpu fpv4-sp-d16
 356              	Error_Handler:
 357              	.LFB140:
 257:Core/Src/main.c **** 
 258:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 259:Core/Src/main.c **** 
 260:Core/Src/main.c **** /* USER CODE END 4 */
 261:Core/Src/main.c **** 
 262:Core/Src/main.c **** /**
 263:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 264:Core/Src/main.c ****   * @retval None
 265:Core/Src/main.c ****   */
 266:Core/Src/main.c **** void Error_Handler(void)
 267:Core/Src/main.c **** {
 358              		.loc 1 267 1 view -0
 359              		.cfi_startproc
 360              		@ Volatile: function does not return.
 361              		@ args = 0, pretend = 0, frame = 0
 362              		@ frame_needed = 0, uses_anonymous_args = 0
 363              		@ link register save eliminated.
 268:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 269:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 270:Core/Src/main.c ****   __disable_irq();
 364              		.loc 1 270 3 view .LVU87
 365              	.LBB8:
 366              	.LBI8:
 367              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.2.0
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     08. May 2019
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
ARM GAS  /tmp/cc5wW6mo.s 			page 13


  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
ARM GAS  /tmp/cc5wW6mo.s 			page 14


  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  /tmp/cc5wW6mo.s 			page 15


 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
ARM GAS  /tmp/cc5wW6mo.s 			page 16


 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 194:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 198:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 368              		.loc 2 207 27 view .LVU88
 369              	.LBB9:
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 370              		.loc 2 209 3 view .LVU89
 371              		.syntax unified
 372              	@ 209 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 373 0000 72B6     		cpsid i
 374              	@ 0 "" 2
 375              		.thumb
 376              		.syntax unified
 377              	.L20:
 378              	.LBE9:
 379              	.LBE8:
 271:Core/Src/main.c ****   while (1)
 380              		.loc 1 271 3 discriminator 1 view .LVU90
 272:Core/Src/main.c ****   {
 273:Core/Src/main.c ****   }
 381              		.loc 1 273 3 discriminator 1 view .LVU91
 271:Core/Src/main.c ****   while (1)
 382              		.loc 1 271 9 discriminator 1 view .LVU92
 383 0002 FEE7     		b	.L20
 384              		.cfi_endproc
 385              	.LFE140:
 387              		.section	.text.MX_USART2_UART_Init,"ax",%progbits
 388              		.align	1
 389              		.syntax unified
 390              		.thumb
 391              		.thumb_func
 392              		.fpu fpv4-sp-d16
 394              	MX_USART2_UART_Init:
ARM GAS  /tmp/cc5wW6mo.s 			page 17


 395              	.LFB137:
 168:Core/Src/main.c **** 
 396              		.loc 1 168 1 view -0
 397              		.cfi_startproc
 398              		@ args = 0, pretend = 0, frame = 0
 399              		@ frame_needed = 0, uses_anonymous_args = 0
 400 0000 08B5     		push	{r3, lr}
 401              	.LCFI4:
 402              		.cfi_def_cfa_offset 8
 403              		.cfi_offset 3, -8
 404              		.cfi_offset 14, -4
 177:Core/Src/main.c ****   huart2.Init.BaudRate = 9600;
 405              		.loc 1 177 3 view .LVU94
 177:Core/Src/main.c ****   huart2.Init.BaudRate = 9600;
 406              		.loc 1 177 19 is_stmt 0 view .LVU95
 407 0002 0B48     		ldr	r0, .L25
 408 0004 0B4B     		ldr	r3, .L25+4
 409 0006 0360     		str	r3, [r0]
 178:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 410              		.loc 1 178 3 is_stmt 1 view .LVU96
 178:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 411              		.loc 1 178 24 is_stmt 0 view .LVU97
 412 0008 4FF41653 		mov	r3, #9600
 413 000c 4360     		str	r3, [r0, #4]
 179:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 414              		.loc 1 179 3 is_stmt 1 view .LVU98
 179:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 415              		.loc 1 179 26 is_stmt 0 view .LVU99
 416 000e 0023     		movs	r3, #0
 417 0010 8360     		str	r3, [r0, #8]
 180:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 418              		.loc 1 180 3 is_stmt 1 view .LVU100
 180:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 419              		.loc 1 180 24 is_stmt 0 view .LVU101
 420 0012 C360     		str	r3, [r0, #12]
 181:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 421              		.loc 1 181 3 is_stmt 1 view .LVU102
 181:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 422              		.loc 1 181 22 is_stmt 0 view .LVU103
 423 0014 0361     		str	r3, [r0, #16]
 182:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 424              		.loc 1 182 3 is_stmt 1 view .LVU104
 182:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 425              		.loc 1 182 20 is_stmt 0 view .LVU105
 426 0016 0C22     		movs	r2, #12
 427 0018 4261     		str	r2, [r0, #20]
 183:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 428              		.loc 1 183 3 is_stmt 1 view .LVU106
 183:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 429              		.loc 1 183 25 is_stmt 0 view .LVU107
 430 001a 8361     		str	r3, [r0, #24]
 184:Core/Src/main.c ****   huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 431              		.loc 1 184 3 is_stmt 1 view .LVU108
 184:Core/Src/main.c ****   huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 432              		.loc 1 184 28 is_stmt 0 view .LVU109
 433 001c C361     		str	r3, [r0, #28]
 185:Core/Src/main.c ****   huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
ARM GAS  /tmp/cc5wW6mo.s 			page 18


 434              		.loc 1 185 3 is_stmt 1 view .LVU110
 185:Core/Src/main.c ****   huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 435              		.loc 1 185 30 is_stmt 0 view .LVU111
 436 001e 0362     		str	r3, [r0, #32]
 186:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 437              		.loc 1 186 3 is_stmt 1 view .LVU112
 186:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 438              		.loc 1 186 38 is_stmt 0 view .LVU113
 439 0020 4362     		str	r3, [r0, #36]
 187:Core/Src/main.c ****   {
 440              		.loc 1 187 3 is_stmt 1 view .LVU114
 187:Core/Src/main.c ****   {
 441              		.loc 1 187 7 is_stmt 0 view .LVU115
 442 0022 FFF7FEFF 		bl	HAL_UART_Init
 443              	.LVL19:
 187:Core/Src/main.c ****   {
 444              		.loc 1 187 6 view .LVU116
 445 0026 00B9     		cbnz	r0, .L24
 195:Core/Src/main.c **** 
 446              		.loc 1 195 1 view .LVU117
 447 0028 08BD     		pop	{r3, pc}
 448              	.L24:
 189:Core/Src/main.c ****   }
 449              		.loc 1 189 5 is_stmt 1 view .LVU118
 450 002a FFF7FEFF 		bl	Error_Handler
 451              	.LVL20:
 452              	.L26:
 453 002e 00BF     		.align	2
 454              	.L25:
 455 0030 00000000 		.word	.LANCHOR4
 456 0034 00440040 		.word	1073759232
 457              		.cfi_endproc
 458              	.LFE137:
 460              		.section	.text.SystemClock_Config,"ax",%progbits
 461              		.align	1
 462              		.global	SystemClock_Config
 463              		.syntax unified
 464              		.thumb
 465              		.thumb_func
 466              		.fpu fpv4-sp-d16
 468              	SystemClock_Config:
 469              	.LFB136:
 120:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 470              		.loc 1 120 1 view -0
 471              		.cfi_startproc
 472              		@ args = 0, pretend = 0, frame = 88
 473              		@ frame_needed = 0, uses_anonymous_args = 0
 474 0000 00B5     		push	{lr}
 475              	.LCFI5:
 476              		.cfi_def_cfa_offset 4
 477              		.cfi_offset 14, -4
 478 0002 97B0     		sub	sp, sp, #92
 479              	.LCFI6:
 480              		.cfi_def_cfa_offset 96
 121:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 481              		.loc 1 121 3 view .LVU120
 121:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
ARM GAS  /tmp/cc5wW6mo.s 			page 19


 482              		.loc 1 121 22 is_stmt 0 view .LVU121
 483 0004 4422     		movs	r2, #68
 484 0006 0021     		movs	r1, #0
 485 0008 05A8     		add	r0, sp, #20
 486 000a FFF7FEFF 		bl	memset
 487              	.LVL21:
 122:Core/Src/main.c **** 
 488              		.loc 1 122 3 is_stmt 1 view .LVU122
 122:Core/Src/main.c **** 
 489              		.loc 1 122 22 is_stmt 0 view .LVU123
 490 000e 0023     		movs	r3, #0
 491 0010 0093     		str	r3, [sp]
 492 0012 0193     		str	r3, [sp, #4]
 493 0014 0293     		str	r3, [sp, #8]
 494 0016 0393     		str	r3, [sp, #12]
 495 0018 0493     		str	r3, [sp, #16]
 126:Core/Src/main.c ****   {
 496              		.loc 1 126 3 is_stmt 1 view .LVU124
 126:Core/Src/main.c ****   {
 497              		.loc 1 126 7 is_stmt 0 view .LVU125
 498 001a 4FF40070 		mov	r0, #512
 499 001e FFF7FEFF 		bl	HAL_PWREx_ControlVoltageScaling
 500              	.LVL22:
 126:Core/Src/main.c ****   {
 501              		.loc 1 126 6 view .LVU126
 502 0022 20BB     		cbnz	r0, .L32
 133:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 503              		.loc 1 133 3 is_stmt 1 view .LVU127
 133:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 504              		.loc 1 133 36 is_stmt 0 view .LVU128
 505 0024 0223     		movs	r3, #2
 506 0026 0593     		str	r3, [sp, #20]
 134:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 507              		.loc 1 134 3 is_stmt 1 view .LVU129
 134:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 508              		.loc 1 134 30 is_stmt 0 view .LVU130
 509 0028 4FF48072 		mov	r2, #256
 510 002c 0892     		str	r2, [sp, #32]
 135:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 511              		.loc 1 135 3 is_stmt 1 view .LVU131
 135:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 512              		.loc 1 135 41 is_stmt 0 view .LVU132
 513 002e 1022     		movs	r2, #16
 514 0030 0992     		str	r2, [sp, #36]
 136:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 515              		.loc 1 136 3 is_stmt 1 view .LVU133
 136:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 516              		.loc 1 136 34 is_stmt 0 view .LVU134
 517 0032 0F93     		str	r3, [sp, #60]
 137:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 1;
 518              		.loc 1 137 3 is_stmt 1 view .LVU135
 137:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 1;
 519              		.loc 1 137 35 is_stmt 0 view .LVU136
 520 0034 1093     		str	r3, [sp, #64]
 138:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 10;
 521              		.loc 1 138 3 is_stmt 1 view .LVU137
 138:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 10;
ARM GAS  /tmp/cc5wW6mo.s 			page 20


 522              		.loc 1 138 30 is_stmt 0 view .LVU138
 523 0036 0122     		movs	r2, #1
 524 0038 1192     		str	r2, [sp, #68]
 139:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV7;
 525              		.loc 1 139 3 is_stmt 1 view .LVU139
 139:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV7;
 526              		.loc 1 139 30 is_stmt 0 view .LVU140
 527 003a 0A22     		movs	r2, #10
 528 003c 1292     		str	r2, [sp, #72]
 140:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
 529              		.loc 1 140 3 is_stmt 1 view .LVU141
 140:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
 530              		.loc 1 140 30 is_stmt 0 view .LVU142
 531 003e 0722     		movs	r2, #7
 532 0040 1392     		str	r2, [sp, #76]
 141:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 533              		.loc 1 141 3 is_stmt 1 view .LVU143
 141:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 534              		.loc 1 141 30 is_stmt 0 view .LVU144
 535 0042 1493     		str	r3, [sp, #80]
 142:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 536              		.loc 1 142 3 is_stmt 1 view .LVU145
 142:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 537              		.loc 1 142 30 is_stmt 0 view .LVU146
 538 0044 1593     		str	r3, [sp, #84]
 143:Core/Src/main.c ****   {
 539              		.loc 1 143 3 is_stmt 1 view .LVU147
 143:Core/Src/main.c ****   {
 540              		.loc 1 143 7 is_stmt 0 view .LVU148
 541 0046 05A8     		add	r0, sp, #20
 542 0048 FFF7FEFF 		bl	HAL_RCC_OscConfig
 543              	.LVL23:
 143:Core/Src/main.c ****   {
 544              		.loc 1 143 6 view .LVU149
 545 004c 88B9     		cbnz	r0, .L33
 149:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 546              		.loc 1 149 3 is_stmt 1 view .LVU150
 149:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 547              		.loc 1 149 31 is_stmt 0 view .LVU151
 548 004e 0F23     		movs	r3, #15
 549 0050 0093     		str	r3, [sp]
 151:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 550              		.loc 1 151 3 is_stmt 1 view .LVU152
 151:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 551              		.loc 1 151 34 is_stmt 0 view .LVU153
 552 0052 0323     		movs	r3, #3
 553 0054 0193     		str	r3, [sp, #4]
 152:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 554              		.loc 1 152 3 is_stmt 1 view .LVU154
 152:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 555              		.loc 1 152 35 is_stmt 0 view .LVU155
 556 0056 0023     		movs	r3, #0
 557 0058 0293     		str	r3, [sp, #8]
 153:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 558              		.loc 1 153 3 is_stmt 1 view .LVU156
 153:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 559              		.loc 1 153 36 is_stmt 0 view .LVU157
ARM GAS  /tmp/cc5wW6mo.s 			page 21


 560 005a 0393     		str	r3, [sp, #12]
 154:Core/Src/main.c **** 
 561              		.loc 1 154 3 is_stmt 1 view .LVU158
 154:Core/Src/main.c **** 
 562              		.loc 1 154 36 is_stmt 0 view .LVU159
 563 005c 0493     		str	r3, [sp, #16]
 156:Core/Src/main.c ****   {
 564              		.loc 1 156 3 is_stmt 1 view .LVU160
 156:Core/Src/main.c ****   {
 565              		.loc 1 156 7 is_stmt 0 view .LVU161
 566 005e 0421     		movs	r1, #4
 567 0060 6846     		mov	r0, sp
 568 0062 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 569              	.LVL24:
 156:Core/Src/main.c ****   {
 570              		.loc 1 156 6 view .LVU162
 571 0066 30B9     		cbnz	r0, .L34
 160:Core/Src/main.c **** 
 572              		.loc 1 160 1 view .LVU163
 573 0068 17B0     		add	sp, sp, #92
 574              	.LCFI7:
 575              		.cfi_remember_state
 576              		.cfi_def_cfa_offset 4
 577              		@ sp needed
 578 006a 5DF804FB 		ldr	pc, [sp], #4
 579              	.L32:
 580              	.LCFI8:
 581              		.cfi_restore_state
 128:Core/Src/main.c ****   }
 582              		.loc 1 128 5 is_stmt 1 view .LVU164
 583 006e FFF7FEFF 		bl	Error_Handler
 584              	.LVL25:
 585              	.L33:
 145:Core/Src/main.c ****   }
 586              		.loc 1 145 5 view .LVU165
 587 0072 FFF7FEFF 		bl	Error_Handler
 588              	.LVL26:
 589              	.L34:
 158:Core/Src/main.c ****   }
 590              		.loc 1 158 5 view .LVU166
 591 0076 FFF7FEFF 		bl	Error_Handler
 592              	.LVL27:
 593              		.cfi_endproc
 594              	.LFE136:
 596              		.section	.text.main,"ax",%progbits
 597              		.align	1
 598              		.global	main
 599              		.syntax unified
 600              		.thumb
 601              		.thumb_func
 602              		.fpu fpv4-sp-d16
 604              	main:
 605              	.LFB135:
  74:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 606              		.loc 1 74 1 view -0
 607              		.cfi_startproc
 608              		@ Volatile: function does not return.
ARM GAS  /tmp/cc5wW6mo.s 			page 22


 609              		@ args = 0, pretend = 0, frame = 0
 610              		@ frame_needed = 0, uses_anonymous_args = 0
 611 0000 08B5     		push	{r3, lr}
 612              	.LCFI9:
 613              		.cfi_def_cfa_offset 8
 614              		.cfi_offset 3, -8
 615              		.cfi_offset 14, -4
  82:Core/Src/main.c **** 
 616              		.loc 1 82 3 view .LVU168
 617 0002 FFF7FEFF 		bl	HAL_Init
 618              	.LVL28:
  89:Core/Src/main.c **** 
 619              		.loc 1 89 3 view .LVU169
 620 0006 FFF7FEFF 		bl	SystemClock_Config
 621              	.LVL29:
  96:Core/Src/main.c ****   MX_USART2_UART_Init();
 622              		.loc 1 96 3 view .LVU170
 623 000a FFF7FEFF 		bl	MX_GPIO_Init
 624              	.LVL30:
  97:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 625              		.loc 1 97 3 view .LVU171
 626 000e FFF7FEFF 		bl	MX_USART2_UART_Init
 627              	.LVL31:
 100:Core/Src/main.c **** 
 628              		.loc 1 100 3 view .LVU172
 629 0012 0122     		movs	r2, #1
 630 0014 0249     		ldr	r1, .L38
 631 0016 0348     		ldr	r0, .L38+4
 632 0018 FFF7FEFF 		bl	HAL_UART_Receive_IT
 633              	.LVL32:
 634              	.L36:
 106:Core/Src/main.c ****   {
 635              		.loc 1 106 3 discriminator 1 view .LVU173
 111:Core/Src/main.c ****   /* USER CODE END 3 */
 636              		.loc 1 111 3 discriminator 1 view .LVU174
 106:Core/Src/main.c ****   {
 637              		.loc 1 106 9 discriminator 1 view .LVU175
 638 001c FEE7     		b	.L36
 639              	.L39:
 640 001e 00BF     		.align	2
 641              	.L38:
 642 0020 00000000 		.word	.LANCHOR2
 643 0024 00000000 		.word	.LANCHOR4
 644              		.cfi_endproc
 645              	.LFE135:
 647              		.global	transfer_cplt
 648              		.global	rx_buffer
 649              		.global	rx_data
 650              		.global	rx_indx
 651              		.global	huart2
 652              		.section	.bss.huart2,"aw",%nobits
 653              		.align	2
 654              		.set	.LANCHOR4,. + 0
 657              	huart2:
 658 0000 00000000 		.space	132
 658      00000000 
 658      00000000 
ARM GAS  /tmp/cc5wW6mo.s 			page 23


 658      00000000 
 658      00000000 
 659              		.section	.bss.rx_buffer,"aw",%nobits
 660              		.align	2
 661              		.set	.LANCHOR1,. + 0
 664              	rx_buffer:
 665 0000 00000000 		.space	100
 665      00000000 
 665      00000000 
 665      00000000 
 665      00000000 
 666              		.section	.bss.rx_data,"aw",%nobits
 667              		.align	2
 668              		.set	.LANCHOR2,. + 0
 671              	rx_data:
 672 0000 0000     		.space	2
 673              		.section	.bss.rx_indx,"aw",%nobits
 674              		.set	.LANCHOR0,. + 0
 677              	rx_indx:
 678 0000 00       		.space	1
 679              		.section	.bss.transfer_cplt,"aw",%nobits
 680              		.set	.LANCHOR3,. + 0
 683              	transfer_cplt:
 684 0000 00       		.space	1
 685              		.text
 686              	.Letext0:
 687              		.file 3 "/usr/arm-none-eabi/include/machine/_default_types.h"
 688              		.file 4 "/usr/arm-none-eabi/include/sys/_stdint.h"
 689              		.file 5 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l476xx.h"
 690              		.file 6 "/usr/lib/gcc/arm-none-eabi/11.2.0/include/stddef.h"
 691              		.file 7 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_def.h"
 692              		.file 8 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_rcc.h"
 693              		.file 9 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_gpio.h"
 694              		.file 10 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_dma.h"
 695              		.file 11 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_uart.h"
 696              		.file 12 "/usr/arm-none-eabi/include/string.h"
 697              		.file 13 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_pwr_ex.h"
 698              		.file 14 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal.h"
 699              		.file 15 "<built-in>"
ARM GAS  /tmp/cc5wW6mo.s 			page 24


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/cc5wW6mo.s:18     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/cc5wW6mo.s:25     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/cc5wW6mo.s:159    .text.MX_GPIO_Init:0000000000000098 $d
     /tmp/cc5wW6mo.s:165    .rodata.HAL_UART_RxCpltCallback.str1.4:0000000000000000 $d
     /tmp/cc5wW6mo.s:172    .text.HAL_UART_RxCpltCallback:0000000000000000 $t
     /tmp/cc5wW6mo.s:179    .text.HAL_UART_RxCpltCallback:0000000000000000 HAL_UART_RxCpltCallback
     /tmp/cc5wW6mo.s:337    .text.HAL_UART_RxCpltCallback:00000000000000bc $d
     /tmp/cc5wW6mo.s:349    .text.Error_Handler:0000000000000000 $t
     /tmp/cc5wW6mo.s:356    .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/cc5wW6mo.s:388    .text.MX_USART2_UART_Init:0000000000000000 $t
     /tmp/cc5wW6mo.s:394    .text.MX_USART2_UART_Init:0000000000000000 MX_USART2_UART_Init
     /tmp/cc5wW6mo.s:455    .text.MX_USART2_UART_Init:0000000000000030 $d
     /tmp/cc5wW6mo.s:461    .text.SystemClock_Config:0000000000000000 $t
     /tmp/cc5wW6mo.s:468    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/cc5wW6mo.s:597    .text.main:0000000000000000 $t
     /tmp/cc5wW6mo.s:604    .text.main:0000000000000000 main
     /tmp/cc5wW6mo.s:642    .text.main:0000000000000020 $d
     /tmp/cc5wW6mo.s:683    .bss.transfer_cplt:0000000000000000 transfer_cplt
     /tmp/cc5wW6mo.s:664    .bss.rx_buffer:0000000000000000 rx_buffer
     /tmp/cc5wW6mo.s:671    .bss.rx_data:0000000000000000 rx_data
     /tmp/cc5wW6mo.s:677    .bss.rx_indx:0000000000000000 rx_indx
     /tmp/cc5wW6mo.s:657    .bss.huart2:0000000000000000 huart2
     /tmp/cc5wW6mo.s:653    .bss.huart2:0000000000000000 $d
     /tmp/cc5wW6mo.s:660    .bss.rx_buffer:0000000000000000 $d
     /tmp/cc5wW6mo.s:667    .bss.rx_data:0000000000000000 $d
     /tmp/cc5wW6mo.s:678    .bss.rx_indx:0000000000000000 $d
     /tmp/cc5wW6mo.s:684    .bss.transfer_cplt:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_UART_Receive_IT
strlen
HAL_UART_Transmit
strcmp
HAL_UART_Init
memset
HAL_PWREx_ControlVoltageScaling
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
